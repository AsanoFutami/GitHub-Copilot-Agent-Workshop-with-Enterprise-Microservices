server:
  port: 8084
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: payment-cart-service
  
  # PostgreSQL settings
  datasource:
    url: jdbc:postgresql://localhost:5432/skishop_payment
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      maximum-pool-size: 10

  # JPA settings
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: Asia/Tokyo
    open-in-view: false

  # Redis settings
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      timeout: 2000ms
      jedis:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 1
          max-wait: -1ms

  # Flyway settings
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Kafka settings
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        paymentEvents-out-0:
          destination: payment.events
          content-type: application/json
        cartEvents-out-0:
          destination: cart.events
          content-type: application/json

  # Security settings
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/skishop

# Stripe settings
stripe:
  api-key: sk_test_dummy_key_for_development
  webhook-secret: whsec_dummy_secret_for_development

# Cache settings
spring.cache:
  type: redis
  redis:
    time-to-live: 600000

# Logging settings
logging:
  level:
    com.skishop.payment: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/payment-cart-service.log

# Actuator settings
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

# OpenAPI settings
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
