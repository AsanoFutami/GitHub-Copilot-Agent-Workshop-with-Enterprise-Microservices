server:
  port: 8090

spring:
  application:
    name: api-gateway
  
  # Cloud Gateway & Stream settings
  cloud:
    gateway:
      # Global filter settings
      global-filters:
        - name: LoggingFilter
          args:
            baseMessage: API Gateway Request/Response
            preLogger: true
            postLogger: true
        - name: RequestSizeFilter
          args:
            max-size: 5MB
      
      # Default filter settings
      default-filters:
        - name: DedupeResponseHeader
          args:
            name: Access-Control-Allow-Credentials Access-Control-Allow-Origin
            strategy: RETAIN_FIRST
        - name: AddResponseHeader
          args:
            name: X-Gateway
            value: SkiShop API Gateway
        - name: AddRequestHeader
          args:
            name: X-Forwarded-By
            value: SkiShop Gateway
      
      # HTTP timeout settings
      httpclient:
        connect-timeout: 3000
        response-timeout: 10s
        pool:
          max-connections: 100
          max-idle-time: 30s
          max-life-time: 60s
          eviction-interval: 30s
      
      # Circuit breaker settings
      circuit-breaker:
        config:
          default:
            sliding-window-size: 20
            minimum-number-of-calls: 5
            failure-rate-threshold: 50
            wait-duration-in-open-state: 10s
            permitted-number-of-calls-in-half-open-state: 3
    # Kafka settings (for event publishing)
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:localhost:9092}
      bindings:
        apiGatewayEvent-out-0:
          destination: gateway.events
          content-type: application/json
  
  # Security settings
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/skishop}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/auth/realms/skishop/protocol/openid_connect/certs}
          cache-duration: PT5M
  
  # Redis settings (for rate limiting)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
  # Kafka settings (for event publishing)
  # Note: 'cloud.stream' is integrated into the 'cloud' section

# Server settings

# Management endpoint settings
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    gateway:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
    tags:
      service: api-gateway
    distribution:
      percentiles-histogram:
        http.server.requests: true
        gateway.requests: true

# Logging settings
logging:
  level:
    com.skishop.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: INFO
    org.springframework.web.reactive: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

# Application specific settings
app:
  # Backend service settings
  services:
    authentication: ${AUTH_SERVICE_URL:http://localhost:8080}
    user-management: ${USER_SERVICE_URL:http://localhost:8081}
    inventory-management: ${INVENTORY_SERVICE_URL:http://localhost:8082}
    sales-management: ${SALES_SERVICE_URL:http://localhost:8083}
    payment-cart: ${PAYMENT_CART_SERVICE_URL:http://localhost:8084}
    point: ${POINT_SERVICE_URL:http://localhost:8085}
    coupon: ${COUPON_SERVICE_URL:http://localhost:8086}
    ai-support: ${AI_SUPPORT_SERVICE_URL:http://localhost:8087}
  
  # Rate limit settings
  rate-limit:
    default:
      requests-per-second: 10
      burst-capacity: 20
    premium:
      requests-per-second: 100
      burst-capacity: 200
    
  # CORS settings
  cors:
    allowed-origins: 
      - ${FRONTEND_URL:http://localhost:3000}
      - ${ADMIN_URL:http://localhost:3001}
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true
    max-age: 3600
  
  # セキュリティ設定
  security:
    # Public endpoints (no authentication required)
    public-endpoints:
      - "/api/auth/**"
      - "/api/products/public/**"
      - "/api/search/public/**"
      - "/actuator/health"
      - "/actuator/prometheus"
      - "/swagger-ui/**"
      - "/v3/api-docs/**"
    
    # Admin-only endpoints
    admin-endpoints:
      - "/api/admin/**"
      - "/api/analytics/**"
      - "/api/inventory/admin/**"
      - "/actuator/**"
    
    # JWT settings
    jwt:
      secret-key: ${JWT_SECRET:your-jwt-secret-key-here}
      expiration: 86400 # 24 hours
      refresh-expiration: 604800 # 7 days
  
  # Fallback settings
  fallback:
    enabled: true
    cache-duration: PT30S
    default-message: "The service is temporarily unavailable. Please try again later."

# Resilience4j settings
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      user-service:
        base-config: default
        wait-duration-in-open-state: 5s
      auth-service:
        base-config: default
        wait-duration-in-open-state: 3s
      inventory-service:
        base-config: default
      sales-service:
        base-config: default
      payment-cart-service:
        base-config: default
        failure-rate-threshold: 30
      point-service:
        base-config: default
      coupon-service:
        base-config: default
      ai-support-service:
        base-config: default
        wait-duration-in-open-state: 15s

  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException

# API documentation settings
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    urls:
      - name: API Gateway
        url: /api-docs
      - name: Authentication Service
        url: http://localhost:8080/api-docs
      - name: User Management Service
        url: http://localhost:8081/api-docs
